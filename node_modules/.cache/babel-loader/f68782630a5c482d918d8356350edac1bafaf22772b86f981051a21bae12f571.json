{"ast":null,"code":"var _jsxFileName = \"/home/cyb/memory/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Counter from './Counter';\nimport pizza from '../images/pizza.jpg';\nimport burger from '../images/burger.jpg';\nimport fries from '../images/frying.jpg';\nimport fishsoup from '../images/fishsoup.jpg';\nimport chikenwings from '../images/bakedchickenwings.jpg';\nimport grilledchicken from '../images/grilledchicken.jpg';\nimport mexicantacos from '../images/Mexicantacos.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = () => {\n  _s();\n  const [cards, setCards] = useState([{\n    id: 1,\n    title: 'Pizza',\n    image: pizza\n  }, {\n    id: 2,\n    title: 'Burger',\n    image: burger\n  }, {\n    id: 3,\n    title: 'Ingredients',\n    image: fries\n  }, {\n    id: 4,\n    title: 'Baked Chickenwings',\n    image: chikenwings\n  }, {\n    id: 5,\n    title: 'Grilled Chicken',\n    image: grilledchicken\n  }, {\n    id: 6,\n    title: 'Mexican tacos',\n    image: mexicantacos\n  }]);\n  const [count, setCount] = useState(0);\n  const handleCardClick = clickedCard => {\n    setCards(prevCards => {\n      const clickedIndex = prevCards.findIndex(card => card.id === clickedCard.id, setCount(count + 1));\n      const randomIndex = Math.floor(Math.random() * prevCards.length);\n      const updatedCards = [...prevCards];\n      const temp = updatedCards[clickedIndex];\n      updatedCards[clickedIndex] = updatedCards[randomIndex];\n      updatedCards[randomIndex] = temp;\n      return updatedCards;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        onClick: () => handleCardClick(card),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.image,\n          alt: \"Card Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"dfIqhnoaAKwQ7jFQUz1MmfbR7SQ=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","Counter","pizza","burger","fries","fishsoup","chikenwings","grilledchicken","mexicantacos","jsxDEV","_jsxDEV","Card","_s","cards","setCards","id","title","image","count","setCount","handleCardClick","clickedCard","prevCards","clickedIndex","findIndex","card","randomIndex","Math","floor","random","length","updatedCards","temp","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","alt","_c","$RefreshReg$"],"sources":["/home/cyb/memory/src/components/Card.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Counter from './Counter';\nimport pizza from '../images/pizza.jpg';\nimport burger from '../images/burger.jpg';\nimport fries from '../images/frying.jpg';\nimport fishsoup from '../images/fishsoup.jpg';\nimport chikenwings from '../images/bakedchickenwings.jpg';\nimport grilledchicken from '../images/grilledchicken.jpg';\nimport mexicantacos from '../images/Mexicantacos.jpg';\n\n\nconst Card = () => {\n  const [cards, setCards] = useState([\n    { id: 1, title: 'Pizza', image: pizza },\n    { id: 2, title: 'Burger', image: burger },\n    { id: 3, title: 'Ingredients', image: fries },\n    { id: 4, title: 'Baked Chickenwings', image: chikenwings },\n    { id: 5, title: 'Grilled Chicken', image: grilledchicken },\n    { id: 6, title: 'Mexican tacos', image: mexicantacos }\n  ]);\n  const [count, setCount] = useState(0);\n\n\n  const handleCardClick = (clickedCard,) => {\n    setCards((prevCards) => {\n\n      const clickedIndex = prevCards.findIndex((card) => card.id === clickedCard.id, setCount(count + 1));\n      const randomIndex = Math.floor(Math.random() * prevCards.length);\n\n      const updatedCards = [...prevCards];\n      const temp = updatedCards[clickedIndex];\n      updatedCards[clickedIndex] = updatedCards[randomIndex];\n      updatedCards[randomIndex] = temp;\n\n\n      return updatedCards;\n     \n    });\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h2>{count}</h2>\n        {cards.map((card) => (\n          <div key={card.id} className=\"card\" onClick={() => handleCardClick(card) }>\n            <img src={card.image} alt=\"Card Image\" />\n            <h2>{card.title}</h2>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}