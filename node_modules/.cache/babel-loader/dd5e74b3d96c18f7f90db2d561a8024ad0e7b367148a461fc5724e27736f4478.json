{"ast":null,"code":"var _jsxFileName = \"/home/cyb/memory/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport pizza from '../images/pizza.jpg';\nimport burger from '../images/burger.jpg';\nimport fries from '../images/frying.jpg';\nimport fishsoup from '../images/fishsoup.jpg';\nimport chikenwings from '../images/bakedchickenwings.jpg';\nimport grilledchicken from '../images/grilledchicken.jpg';\nimport mexicantacos from '../images/Mexicantacos.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = () => {\n  _s();\n  const [cards, setCards] = useState([{\n    id: 1,\n    title: 'Pizza',\n    Image: pizza\n  }, {\n    id: 2,\n    title: 'Burger',\n    image: burger\n  }, {\n    id: 3,\n    title: 'Ingredients',\n    image: fries\n  }, {\n    id: 4,\n    title: 'Baked Chickenwings',\n    image: chikenwings\n  }, {\n    id: 5,\n    title: 'Grilled Chicken',\n    image: grilledchicken\n  }, {\n    id: 6,\n    title: 'Mexican tacos',\n    image: mexicantacos\n  }]);\n  const handleCardClick = clickedCard => {\n    setCards(prevCards => {\n      const clickedIndex = prevCards.findIndex(card => card.id === clickedCard.id);\n      const randomIndex = Math.floor(Math.random() * prevCards.length);\n      const updatedCards = [...prevCards];\n      const temp = updatedCards[clickedIndex];\n      updatedCards[clickedIndex] = updatedCards[randomIndex];\n      updatedCards[randomIndex] = temp;\n      return updatedCards;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: pizza,\n          alt: \"Card Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Pizza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: burger,\n          alt: \"Card Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Burger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: fries,\n          alt: \"Card Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: chikenwings,\n          alt: \"Card Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Baked Chickenwings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: grilledchicken,\n          alt: \"Card Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Grilled Chicken\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: mexicantacos,\n          alt: \"Card Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Mexican tacos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"B7Dc5ySvow9Cl4Offjpin6OmWA8=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","pizza","burger","fries","fishsoup","chikenwings","grilledchicken","mexicantacos","jsxDEV","_jsxDEV","Card","_s","cards","setCards","id","title","Image","image","handleCardClick","clickedCard","prevCards","clickedIndex","findIndex","card","randomIndex","Math","floor","random","length","updatedCards","temp","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cyb/memory/src/components/Card.js"],"sourcesContent":["import React, { useState } from 'react'\nimport pizza from '../images/pizza.jpg';\nimport burger from '../images/burger.jpg';\nimport fries from '../images/frying.jpg';\nimport fishsoup from  '../images/fishsoup.jpg';\nimport chikenwings from  '../images/bakedchickenwings.jpg';\nimport grilledchicken from '../images/grilledchicken.jpg';\nimport mexicantacos from '../images/Mexicantacos.jpg';\n\nconst Card = () => {\n\nconst[cards, setCards] = useState([\n{id:1,title: 'Pizza', Image : pizza},\n{ id: 2, title: 'Burger', image: burger },\n{ id: 3, title: 'Ingredients', image: fries },\n{ id: 4, title: 'Baked Chickenwings', image: chikenwings },\n{ id: 5, title: 'Grilled Chicken', image: grilledchicken },\n{ id: 6, title: 'Mexican tacos', image: mexicantacos }\n\n\n\n])\n\nconst handleCardClick = (clickedCard) => {\n    setCards((prevCards) => {\n      const clickedIndex = prevCards.findIndex((card) => card.id === clickedCard.id);\n      const randomIndex = Math.floor(Math.random() * prevCards.length);\n  \n      const updatedCards = [...prevCards];\n      const temp = updatedCards[clickedIndex];\n      updatedCards[clickedIndex] = updatedCards[randomIndex];\n      updatedCards[randomIndex] = temp;\n  \n      return updatedCards;\n    });\n  };\n  \n\n  return (\n    <div>\n      \n      <div className=\"container\">\n    <div className=\"card\">\n        <img src={pizza} alt=\"Card Image\" />\n        <h2> Pizza</h2>\n      </div>\n\n\n\n      <div className=\"card\">\n        <img src={burger} alt=\"Card Image\" />\n        <h2>Burger</h2>\n      </div>\n     \n\n\n      <div className=\"card\">\n        <img src={fries} alt=\"Card Image\" />\n        <h2> Ingredients</h2>\n      </div>\n     \n\n\n      <div className=\"card\">\n        <img src={chikenwings} alt=\"Card Image\" />\n        <h2> Baked Chickenwings</h2>\n      </div>\n\n\n      <div className=\"card\">\n        <img src={grilledchicken} alt=\"Card Image\" />\n        <h2>Grilled Chicken</h2>\n      </div>\n     \n\n      <div className=\"card\">\n        <img src={mexicantacos} alt=\"Card Image\" />\n        <h2>Mexican tacos</h2>\n      </div>\n     \n    </div>\n\n\n\n\n\n\n\n\n    </div>\n  )\n}\n\nexport default Card\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}