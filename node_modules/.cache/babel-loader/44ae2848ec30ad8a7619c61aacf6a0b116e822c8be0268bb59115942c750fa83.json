{"ast":null,"code":"var _jsxFileName = \"/home/cyb/memory/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport pizza from '../images/pizza.jpg';\nimport burger from '../images/burger.jpg';\nimport fries from '../images/frying.jpg';\nimport fishsoup from '../images/fishsoup.jpg';\nimport chikenwings from '../images/bakedchickenwings.jpg';\nimport grilledchicken from '../images/grilledchicken.jpg';\nimport mexicantacos from '../images/Mexicantacos.jpg';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = () => {\n  _s();\n  const [cards, setCards] = useState([{\n    id: 1,\n    title: 'Pizza',\n    image: pizza\n  }, {\n    id: 2,\n    title: 'Burger',\n    image: burger\n  }, {\n    id: 3,\n    title: 'Ingredients',\n    image: fries\n  }, {\n    id: 4,\n    title: 'Baked Chickenwings',\n    image: chikenwings\n  }, {\n    id: 5,\n    title: 'Grilled Chicken',\n    image: grilledchicken\n  }, {\n    id: 6,\n    title: 'Mexican tacos',\n    image: mexicantacos\n  }]);\n  const handleCardClick = clickedCard => {\n    setCards(prevCards => {\n      // Find the index of the clicked card\n      const clickedIndex = prevCards.findIndex(card => card.id === clickedCard.id);\n      // Find the index of the next card\n      const nextIndex = clickedIndex === prevCards.length - 1 ? 0 : clickedIndex + 1;\n\n      // Swap the positions of the clicked card and the next card\n      const updatedCards = [...prevCards];\n      const temp = updatedCards[clickedIndex];\n      updatedCards[clickedIndex] = updatedCards[nextIndex];\n      updatedCards[nextIndex] = temp;\n      return updatedCards;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      onClick: () => handleCardClick(card),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: card.image,\n        alt: \"Card Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: card.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"P/NJnbThlD/IqnldFvoxltzNRUU=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["pizza","burger","fries","fishsoup","chikenwings","grilledchicken","mexicantacos","React","useState","jsxDEV","_jsxDEV","Card","_s","cards","setCards","id","title","image","handleCardClick","clickedCard","prevCards","clickedIndex","findIndex","card","nextIndex","length","updatedCards","temp","className","children","map","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cyb/memory/src/components/Card.js"],"sourcesContent":["\nimport pizza from '../images/pizza.jpg';\nimport burger from '../images/burger.jpg';\nimport fries from '../images/frying.jpg';\nimport fishsoup from  '../images/fishsoup.jpg';\nimport chikenwings from  '../images/bakedchickenwings.jpg';\nimport grilledchicken from '../images/grilledchicken.jpg';\nimport mexicantacos from '../images/Mexicantacos.jpg';\n\nimport React, { useState } from 'react';\n\nconst Card = () => {\n  const [cards, setCards] = useState([\n    { id: 1, title: 'Pizza', image: pizza },\n    { id: 2, title: 'Burger', image: burger },\n    { id: 3, title: 'Ingredients', image: fries },\n    { id: 4, title: 'Baked Chickenwings', image: chikenwings },\n    { id: 5, title: 'Grilled Chicken', image: grilledchicken },\n    { id: 6, title: 'Mexican tacos', image: mexicantacos }\n  ]);\n\n  const handleCardClick = (clickedCard) => {\n    setCards((prevCards) => {\n      // Find the index of the clicked card\n      const clickedIndex = prevCards.findIndex((card) => card.id === clickedCard.id);\n      // Find the index of the next card\n      const nextIndex = clickedIndex === prevCards.length - 1 ? 0 : clickedIndex + 1;\n\n      // Swap the positions of the clicked card and the next card\n      const updatedCards = [...prevCards];\n      const temp = updatedCards[clickedIndex];\n      updatedCards[clickedIndex] = updatedCards[nextIndex];\n      updatedCards[nextIndex] = temp;\n\n      return updatedCards;\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      {cards.map((card) => (\n        <div key={card.id} className=\"card\" onClick={() => handleCardClick(card)}>\n          <img src={card.image} alt=\"Card Image\" />\n          <h2>{card.title}</h2>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}