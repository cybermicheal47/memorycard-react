{"ast":null,"code":"var _jsxFileName = \"/home/cyb/memory/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport pizza from '../images/pizza.jpg';\nimport burger from '../images/burger.jpg';\nimport fries from '../images/frying.jpg';\nimport chikenwings from '../images/bakedchickenwings.jpg';\nimport grilledchicken from '../images/grilledchicken.jpg';\nimport mexicantacos from '../images/Mexicantacos.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = () => {\n  _s();\n  const [cards, setCards] = useState([{\n    id: 1,\n    title: 'Pizza',\n    image: pizza,\n    count: 0,\n    lastCount: 0\n  }, {\n    id: 2,\n    title: 'Burger',\n    image: burger,\n    count: 0,\n    lastCount: 0\n  }, {\n    id: 3,\n    title: 'Ingredients',\n    image: fries,\n    count: 0,\n    lastCount: 0\n  }, {\n    id: 4,\n    title: 'Baked Chickenwings',\n    image: chikenwings,\n    count: 0,\n    lastCount: 0\n  }, {\n    id: 5,\n    title: 'Grilled Chicken',\n    image: grilledchicken,\n    count: 0,\n    lastCount: 0\n  }, {\n    id: 6,\n    title: 'Mexican tacos',\n    image: mexicantacos,\n    count: 0,\n    lastCount: 0\n  }]);\n  const handleCardClick = clickedCard => {\n    setCards(prevCards => {\n      return prevCards.map(card => {\n        if (card.id === clickedCard.id) {\n          const randomReset = Math.floor(Math.random() * 10) + 1;\n          return {\n            ...card,\n            count: randomReset,\n            lastCount: card.count\n          };\n        } else {\n          return card;\n        }\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        onClick: () => handleCardClick(card),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.image,\n          alt: \"Card Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Clicks: \", card.count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Count: \", card.lastCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"CI+GYXi3UGkq1Mw9rkzb0QtD05k=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","pizza","burger","fries","chikenwings","grilledchicken","mexicantacos","jsxDEV","_jsxDEV","Card","_s","cards","setCards","id","title","image","count","lastCount","handleCardClick","clickedCard","prevCards","map","card","randomReset","Math","floor","random","children","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cyb/memory/src/components/Card.js"],"sourcesContent":["import React, { useState } from 'react';\nimport pizza from '../images/pizza.jpg';\nimport burger from '../images/burger.jpg';\nimport fries from '../images/frying.jpg';\nimport chikenwings from '../images/bakedchickenwings.jpg';\nimport grilledchicken from '../images/grilledchicken.jpg';\nimport mexicantacos from '../images/Mexicantacos.jpg';\n\nconst Card = () => {\n  const [cards, setCards] = useState([\n    { id: 1, title: 'Pizza', image: pizza, count: 0, lastCount: 0 },\n    { id: 2, title: 'Burger', image: burger, count: 0, lastCount: 0 },\n    { id: 3, title: 'Ingredients', image: fries, count: 0, lastCount: 0 },\n    { id: 4, title: 'Baked Chickenwings', image: chikenwings, count: 0, lastCount: 0 },\n    { id: 5, title: 'Grilled Chicken', image: grilledchicken, count: 0, lastCount: 0 },\n    { id: 6, title: 'Mexican tacos', image: mexicantacos, count: 0, lastCount: 0 }\n  ]);\n\n  const handleCardClick = (clickedCard) => {\n    setCards((prevCards) => {\n      return prevCards.map((card) => {\n        if (card.id === clickedCard.id) {\n          const randomReset = Math.floor(Math.random() * 10) + 1;\n          return { ...card, count: randomReset, lastCount: card.count };\n        } else {\n          return card;\n        }\n      });\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        {cards.map((card) => (\n          <div key={card.id} className=\"card\" onClick={() => handleCardClick(card)}>\n            <img src={card.image} alt=\"Card Image\" />\n            <h2>{card.title}</h2>\n            <p>Clicks: {card.count}</p>\n            <p>Last Count: {card.lastCount}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,WAAW,MAAM,iCAAiC;AACzD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CACjC;IAAEa,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAEd,KAAK;IAAEe,KAAK,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAE,CAAC,EAC/D;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAEb,MAAM;IAAEc,KAAK,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAE,CAAC,EACjE;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,aAAa;IAAEC,KAAK,EAAEZ,KAAK;IAAEa,KAAK,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAE,CAAC,EACrE;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,oBAAoB;IAAEC,KAAK,EAAEX,WAAW;IAAEY,KAAK,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAE,CAAC,EAClF;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,iBAAiB;IAAEC,KAAK,EAAEV,cAAc;IAAEW,KAAK,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAE,CAAC,EAClF;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,eAAe;IAAEC,KAAK,EAAET,YAAY;IAAEU,KAAK,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAE,CAAC,CAC/E,CAAC;EAEF,MAAMC,eAAe,GAAIC,WAAW,IAAK;IACvCP,QAAQ,CAAEQ,SAAS,IAAK;MACtB,OAAOA,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAK;QAC7B,IAAIA,IAAI,CAACT,EAAE,KAAKM,WAAW,CAACN,EAAE,EAAE;UAC9B,MAAMU,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;UACtD,OAAO;YAAE,GAAGJ,IAAI;YAAEN,KAAK,EAAEO,WAAW;YAAEN,SAAS,EAAEK,IAAI,CAACN;UAAM,CAAC;QAC/D,CAAC,MAAM;UACL,OAAOM,IAAI;QACb;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,oBACEd,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAD,QAAA,EACvBhB,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdd,OAAA;QAAmBoB,SAAS,EAAC,MAAM;QAACC,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAACI,IAAI,CAAE;QAAAK,QAAA,gBACvEnB,OAAA;UAAKsB,GAAG,EAAER,IAAI,CAACP,KAAM;UAACgB,GAAG,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzC3B,OAAA;UAAAmB,QAAA,EAAKL,IAAI,CAACR;QAAK;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrB3B,OAAA;UAAAmB,QAAA,GAAG,UAAQ,EAACL,IAAI,CAACN,KAAK;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3B3B,OAAA;UAAAmB,QAAA,GAAG,cAAY,EAACL,IAAI,CAACL,SAAS;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJ3Bb,IAAI,CAACT,EAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CArCID,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}